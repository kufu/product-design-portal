---
import MemberDialog from "./MemberDialog.astro";

interface Props {
  name: string;
  description: string;
  img: ImageMetadata;
}

const { name, description, img } = Astro.props;
---

<pdp-member-card data-name={name} id={name}>
  <a href=`#${name}`>
    <header>
      <img src={img.src} alt="" } />
    </header>
    <h3>{name}</h3>
    <p>{description}</p>
  </a>

  <MemberDialog name={name} description={description} img={img} />
</pdp-member-card>

<style>
  a {
    display: block;
    background-color: color-mix(in srgb, var(--bg), var(--fg) 20%);
    padding: var(--spacing-2);
    font-family: "New Rocker", cursive;
  }

  header {
    margin-inline: calc(-1 * var(--spacing-2));
  }

  img {
    object-fit: cover;
    vertical-align: bottom;
    width: 100%;
  }
</style>

<script>
  class MemberCard extends HTMLElement {
    constructor() {
      super();

      const name = this.dataset.name;
      const trigger = this.querySelector(
        `a[href="#${name}"]`
      ) as HTMLAnchorElement;
      const dialog = this.querySelector(`#detail_${name}`) as HTMLDialogElement;

      if (dialog && trigger) {
        dialog.addEventListener("close", () => {
          history.pushState(null, "", location.pathname);
          document.title = document.title.split("｜")[1];
        });
        dialog.addEventListener("click", (e) => {
          if (e.target === dialog) {
            dialog.close();
          }
        });

        trigger.addEventListener("click", (e) => {
          e.preventDefault();
          dialog.showModal();
          history.pushState(null, "", `#${name}`);
          document.title = `${name}｜${document.title}`;
        });
      }
    }
  }

  customElements.define("pdp-member-card", MemberCard);
</script>
